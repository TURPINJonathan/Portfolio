name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Set CI environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Copy package-ci.json to package.json
        working-directory: ./front
        run: cp package-ci.json package.json

      - name: Install dependencies
        working-directory: ./front
        run: npm install --legacy-peer-deps

      # - name: Run ESLint
      #   working-directory: ./front
      #   run: npm run lint:fix

      # - name: Run Stylelint
      #   working-directory: ./front
      #   run: npm run lint:css:fix

    # - name: Run build
    #   working-directory: ./front
    #   run: npm run build

    #- name: Run tests
      #working-directory: ./front
      #run: npm test

  backend:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install dependencies
      working-directory: ./back
      run: composer install

    - name: Run PHPStan
      working-directory: ./back
      run: make stan
    
    - name: Run PHP-CS-Fixer
      working-directory: ./back
      run: make cs
    
    - name: Run tests
      working-directory: ./back
      run: make test-no-dox
